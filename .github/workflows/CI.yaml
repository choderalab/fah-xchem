name: CI

on:
  push:
    branches:
      - "master"
  pull_request:
    branches:
      - "master"
  schedule:
    # Nightly tests run on master by default:
    #   Scheduled workflows run on the latest commit on the default or base branch.
    #   (from https://help.github.com/en/actions/reference/events-that-trigger-workflows#scheduled-events-schedule)
    - cron: "0 0 * * *"

jobs:
  lint:
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Check formatting
        uses: lgeiger/black-action@v1.0.1
        with:
          args: "fah_xchem --check"

  test:
    name: Test on ${{ matrix.os }}, Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: 
          #- macOS-latest
          - ubuntu-latest
          #- windows-latest
        python-version: [3.7, 3.8, 3.9]
    env:
      OE_LICENSE: ${{ github.workspace }}/oe_license.txt
      CDD_VAULT_TOKEN: ${{ secrets.CDD_VAULT_TOKEN }}
      CDD_VAULT_NUM: ${{ secrets.CDD_VAULT_NUM }}

    steps:
    - uses: actions/checkout@v1

    - name: Additional info about the build
      shell: bash
      run: |
        uname -a
        df -h
        ulimit -a

        echo "Trigger: ${{ github.event.action }}"

    - name: Cache conda
      uses: actions/cache@v2
      env:
        # Increase this value to reset cache if etc/example-environment.yml has not changed
        CACHE_NUMBER: 0
      with:
        path: ~/conda_pkgs_dir
        key:
          ${{ matrix.os }}-conda-${{ env.CACHE_NUMBER }}-${{
          hashFiles('devtools/conda-envs/test.yaml') }}

    - name: Configure conda
      uses: conda-incubator/setup-miniconda@v2
      with:
        python-version: ${{ matrix.python-version }}
        environment-file: devtools/conda-envs/test.yaml
        activate-environment: fah-xchem
        #auto-update-conda: true
        show-channel-urls: true
        auto-activate-base: false
        use-only-tar-bz2: true # IMPORTANT: This needs to be set for caching to work properly!
        mamba-version: "*"
        use-mamba: true

    - name: Decrypt OpenEye license
      shell: bash -l {0}
      env:
        OE_LICENSE_TEXT: ${{ secrets.OE_LICENSE }}
      run: |
        echo "${OE_LICENSE_TEXT}" > ${OE_LICENSE}
        python -c "import openeye; assert openeye.oechem.OEChemIsLicensed(), 'OpenEye license checks failed!'"

    - name: Install package

      # conda setup requires this special shell
      shell: bash -l {0}
      run: |
        python -m pip install --no-deps -e .
        conda list

    - name: Run tests

      # conda setup requires this special shell
      shell: bash -l {0}

      run: |
        echo "${{ github.event.action }}"
        pytest -v --cov=fah_xchem --cov-report=xml --color=yes fah_xchem

    - name: CodeCov
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-${{ matrix.os }}-py${{ matrix.python-version }}
